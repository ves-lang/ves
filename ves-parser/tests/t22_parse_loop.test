loop {}
@label: loop {}

for i in 0..=10 {}
for i in 0..10 {}
for i in start..10 {}
for i in 0..end {}
for i in start..end {}
for i in 0..10, 5 {}
for i in 0..=10, 5 {}

for ;; {}
for i = 0;; {}
for i = 0; true; ++i {}
for ; true; {}
for ; true; ++i {}
for ;; ++i {}
for a = 0, b = 0, c = 0, d = 0;; {}

while true {}
while ok(v) = f() {}
while err(v) = f() {}

%output

Loop
  body: StmtKind::Block
    statements=
  label: "<@label: 0..4>"
Loop
  body: StmtKind::Block
    statements=
  label: "@label"
ForEach
  variable: "i"
  iterator: Range
    start: Lit
      token: "0"
      value: LitValue::Integer(0)
    end: Lit
      token: "10"
      value: LitValue::Integer(10)
    step: Lit
      token: "1"
      value: LitValue::Integer(1)
    inclusive: true
  body: StmtKind::Block
    statements=
  label: "<@label: 25..28>"
ForEach
  variable: "i"
  iterator: Range
    start: Lit
      token: "0"
      value: LitValue::Integer(0)
    end: Lit
      token: "10"
      value: LitValue::Integer(10)
    step: Lit
      token: "1"
      value: LitValue::Integer(1)
    inclusive: false
  body: StmtKind::Block
    statements=
  label: "<@label: 44..47>"
ForEach
  variable: "i"
  iterator: Range
    start: ExprKind::Variable
      name: "start"
    end: Lit
      token: "10"
      value: LitValue::Integer(10)
    step: Lit
      token: "1"
      value: LitValue::Integer(1)
    inclusive: false
  body: StmtKind::Block
    statements=
  label: "<@label: 62..65>"
ForEach
  variable: "i"
  iterator: Range
    start: Lit
      token: "0"
      value: LitValue::Integer(0)
    end: ExprKind::Variable
      name: "end"
    step: Lit
      token: "1"
      value: LitValue::Integer(1)
    inclusive: false
  body: StmtKind::Block
    statements=
  label: "<@label: 84..87>"
ForEach
  variable: "i"
  iterator: Range
    start: ExprKind::Variable
      name: "start"
    end: ExprKind::Variable
      name: "end"
    step: Lit
      token: "1"
      value: LitValue::Integer(1)
    inclusive: false
  body: StmtKind::Block
    statements=
  label: "<@label: 103..106>"
ForEach
  variable: "i"
  iterator: Range
    start: Lit
      token: "0"
      value: LitValue::Integer(0)
    end: Lit
      token: "10"
      value: LitValue::Integer(10)
    step: Lit
      token: "5"
      value: LitValue::Integer(5)
    inclusive: false
  body: StmtKind::Block
    statements=
  label: "<@label: 126..129>"
ForEach
  variable: "i"
  iterator: Range
    start: Lit
      token: "0"
      value: LitValue::Integer(0)
    end: Lit
      token: "10"
      value: LitValue::Integer(10)
    step: Lit
      token: "5"
      value: LitValue::Integer(5)
    inclusive: true
  body: StmtKind::Block
    statements=
  label: "<@label: 147..150>"
For
  initializers=
  condition: None
  increment: None
  body: StmtKind::Block
    statements=
  label: "<@label: 170..173>"
For
  initializers=
    Assignment
      name: "i"
      value: Lit
        token: "0"
        value: LitValue::Integer(0)
  condition: None
  increment: None
  body: StmtKind::Block
    statements=
  label: "<@label: 180..183>"
For
  initializers=
    Assignment
      name: "i"
      value: Lit
        token: "0"
        value: LitValue::Integer(0)
  condition: Lit
    token: "true"
    value: LitValue::Bool(true)
  increment: ExprKind::PrefixIncDec
    inner: IncDec
      expr: ExprKind::Variable
        name: "i"
      kind: Increment
  body: StmtKind::Block
    statements=
  label: "<@label: 195..198>"
For
  initializers=
  condition: Lit
    token: "true"
    value: LitValue::Bool(true)
  increment: None
  body: StmtKind::Block
    statements=
  label: "<@label: 219..222>"
For
  initializers=
  condition: Lit
    token: "true"
    value: LitValue::Bool(true)
  increment: ExprKind::PrefixIncDec
    inner: IncDec
      expr: ExprKind::Variable
        name: "i"
      kind: Increment
  body: StmtKind::Block
    statements=
  label: "<@label: 234..237>"
For
  initializers=
  condition: None
  increment: ExprKind::PrefixIncDec
    inner: IncDec
      expr: ExprKind::Variable
        name: "i"
      kind: Increment
  body: StmtKind::Block
    statements=
  label: "<@label: 253..256>"
For
  initializers=
    Assignment
      name: "a"
      value: Lit
        token: "0"
        value: LitValue::Integer(0)
    Assignment
      name: "b"
      value: Lit
        token: "0"
        value: LitValue::Integer(0)
    Assignment
      name: "c"
      value: Lit
        token: "0"
        value: LitValue::Integer(0)
    Assignment
      name: "d"
      value: Lit
        token: "0"
        value: LitValue::Integer(0)
  condition: None
  increment: None
  body: StmtKind::Block
    statements=
  label: "<@label: 267..270>"
While
  condition: Condition
    value: Lit
      token: "true"
      value: LitValue::Bool(true)
    pattern: ConditionPattern::Value
  body: StmtKind::Block
    statements=
  label: "<@label: 304..309>"
While
  condition: Condition
    value: Call
      callee: ExprKind::Variable
        name: "f"
      args=
      tco: false
      rest: false
    pattern: ConditionPattern::IsOk
      binding: "v"
  body: StmtKind::Block
    statements=
  label: "<@label: 318..323>"
While
  condition: Condition
    value: Call
      callee: ExprKind::Variable
        name: "f"
      args=
      tco: false
      rest: false
    pattern: ConditionPattern::IsErr
      binding: "v"
  body: StmtKind::Block
    statements=
  label: "<@label: 339..344>"

a++;
++a;
++a[0];
a[0]++;

ok val;
err err val;
try err ++val;

%output

StmtKind::ExprStmt
  expr: ExprKind::PostfixIncDec
    inner: IncDec
      expr: ExprKind::Variable
        name: "a"
      kind: Increment
StmtKind::ExprStmt
  expr: ExprKind::PrefixIncDec
    inner: IncDec
      expr: ExprKind::Variable
        name: "a"
      kind: Increment
StmtKind::ExprStmt
  expr: ExprKind::PrefixIncDec
    inner: IncDec
      expr: GetItem
        node: ExprKind::Variable
          name: "a"
        key: Lit
          token: "0"
          value: LitValue::Number(0.0)
      kind: Increment
StmtKind::ExprStmt
  expr: ExprKind::PostfixIncDec
    inner: IncDec
      expr: GetItem
        node: ExprKind::Variable
          name: "a"
        key: Lit
          token: "0"
          value: LitValue::Number(0.0)
      kind: Increment
StmtKind::ExprStmt
  expr: ExprKind::Unary
    op: WrapOk
    operand: ExprKind::Variable
      name: "val"
StmtKind::ExprStmt
  expr: ExprKind::Unary
    op: WrapErr
    operand: ExprKind::Unary
      op: WrapErr
      operand: ExprKind::Variable
        name: "val"
StmtKind::ExprStmt
  expr: ExprKind::Unary
    op: Try
    operand: ExprKind::Unary
      op: WrapErr
      operand: ExprKind::PrefixIncDec
        inner: IncDec
          expr: ExprKind::Variable
            name: "val"
          kind: Increment

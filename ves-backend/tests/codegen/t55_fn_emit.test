fn test0() {}
fn test1(a) { print(a) }
fn test2(a, b = 0) { print(a, b) }
fn test3(a, b = 0, ...c) { print(a, b, c) }

test0();
test1(1);
test2(1);
test2(1, 2);
test3(1);
test3(1, 2);
test3(1, 2, 3);

%output

|0000| GetConst(<fn test0>)
|0001| SetGlobal(0)
|0002| Pop
|0003| GetConst(<fn test1>)
|0004| SetGlobal(1)
|0005| Pop
|0006| GetConst(<fn test2>)
|0007| SetGlobal(2)
|0008| Pop
|0009| GetConst(<fn test3>)
|0010| SetGlobal(3)
|0011| Pop
|0012| GetGlobal(0)
|0013| PushNone
|0014| Call(0)
|0015| Pop
|0016| GetGlobal(1)
|0017| PushNone
|0018| PushInt32(1)
|0019| Call(1)
|0020| Pop
|0021| GetGlobal(2)
|0022| PushNone
|0023| PushInt32(1)
|0024| Call(1)
|0025| Pop
|0026| GetGlobal(2)
|0027| PushNone
|0028| PushInt32(1)
|0029| PushInt32(2)
|0030| Call(2)
|0031| Pop
|0032| GetGlobal(3)
|0033| PushNone
|0034| PushInt32(1)
|0035| Call(1)
|0036| Pop
|0037| GetGlobal(3)
|0038| PushNone
|0039| PushInt32(1)
|0040| PushInt32(2)
|0041| Call(2)
|0042| Pop
|0043| GetGlobal(3)
|0044| PushNone
|0045| PushInt32(1)
|0046| PushInt32(2)
|0047| PushInt32(3)
|0048| Call(3)
|0049| Pop
|0050| PushNone
|0051| Return
>>>>>> test0
|0000| PushNone
|0001| Return
>>>>>> test1
|0000| GetLocal(1)
|0001| Print
|0002| PushNone
|0003| Return
>>>>>> test2
|0000| PushNone
|0001| GetLocal(2)
|0002| PushNone
|0003| Compare
|0004| Negate
|0005| IsCmpEqual
|0006| JumpIfFalse(12)
|0007| Pop
|0008| PushInt32(0)
|0009| SetLocal(2)
|0010| Pop
|0011| Jump(13)
|0012| Pop
|0013| GetLocal(1)
|0014| GetLocal(2)
|0015| PrintN(2)
|0016| PushNone
|0017| Return
>>>>>> test3
|0000| PushNone
|0001| GetLocal(2)
|0002| PushNone
|0003| Compare
|0004| Negate
|0005| IsCmpEqual
|0006| JumpIfFalse(12)
|0007| Pop
|0008| PushInt32(0)
|0009| SetLocal(2)
|0010| Pop
|0011| Jump(13)
|0012| Pop
|0013| GetLocal(1)
|0014| GetLocal(2)
|0015| GetLocal(3)
|0016| PrintN(3)
|0017| PushNone
|0018| Return